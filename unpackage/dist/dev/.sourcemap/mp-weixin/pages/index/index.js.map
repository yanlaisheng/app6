{"version":3,"file":"index.js","sources":["pages/index/index.vue","F:/FDM下载/HBuilderX.4.65.2025051206/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvaW5kZXgvaW5kZXgudnVl"],"sourcesContent":["<template>\r\n    <!-- 替换原有的picker部分 -->\r\n    <view class=\"device-select\">\r\n        <view class=\"picker-button\" @tap=\"showDeviceList\">\r\n            <text class=\"device-label\">当前设备:</text>\r\n            <text :class=\"[\r\n                'device-name',\r\n                deviceList[selectedIndex].isOnline ? 'device-online' : 'device-offline'\r\n            ]\">\r\n                {{deviceList[selectedIndex].name}}\r\n                <text class=\"device-status\">{{deviceList[selectedIndex].isOnline ? '(在线)' : '(离线)'}}</text>\r\n            </text>\r\n            <text class=\"picker-arrow\">▼</text>\r\n        </view>\r\n    </view>\r\n\r\n    <!-- 添加自定义弹出层 -->\r\n    <view class=\"custom-picker\" v-if=\"showPicker\" @tap.stop=\"hidePicker\">\r\n        <view class=\"picker-mask\"></view>\r\n        <view class=\"picker-content\" @tap.stop>\r\n            <view class=\"picker-header\">\r\n                <text>选择设备</text>\r\n                <text class=\"picker-close\" @tap=\"hidePicker\">×</text>\r\n            </view>\r\n            <view class=\"picker-body\">\r\n                <view \r\n                    v-for=\"(device, index) in deviceList\" \r\n                    :key=\"device.id\"\r\n                    :class=\"[\r\n                        'picker-item',\r\n                        device.isOnline ? 'picker-item-online' : 'picker-item-offline',\r\n                        selectedIndex === index ? 'picker-item-selected' : ''\r\n                    ]\"\r\n                    @tap=\"selectDevice(index)\"\r\n                >\r\n                    <text>{{device.name}}</text>\r\n                    <text class=\"device-status-tag\">{{device.isOnline ? '在线' : '离线'}}</text>\r\n                </view>\r\n            </view>\r\n        </view>\r\n    </view>\r\n\r\n    <view class=\"container\">\r\n        <view v-if=\"deviceList.length === 0\" class=\"empty-list\">\r\n            <text>暂无可用设备</text>\r\n        </view>\r\n        \r\n        <!-- 设备状态显示区 -->\r\n        <view class=\"status-panel\">\r\n            <view class=\"status-item status-connection\">\r\n                <text>设备状态:</text>\r\n                <text :class=\"{'online': deviceStatus.isOnline, 'offline': !deviceStatus.isOnline}\">\r\n                    {{deviceStatus.isOnline ? '在线' : '离线'}}\r\n                </text>\r\n            </view>\r\n            <view class=\"status-item status-time\">\r\n                <text>更新时间:</text>\r\n                <text>{{formattedTime}}</text>\r\n            </view>\r\n            <view class=\"status-item voltage\">\r\n                <text>AB线电压:</text>\r\n                <text>{{deviceStatus.voltageAB || '--'}} V</text>\r\n            </view>\r\n            <view class=\"status-item voltage\">\r\n                <text>BC线电压:</text>\r\n                <text>{{deviceStatus.voltageBC || '--'}} V</text>\r\n            </view>\r\n            <view class=\"status-item voltage\">\r\n                <text>CA线电压:</text>\r\n                <text>{{deviceStatus.voltageCA || '--'}} V</text>\r\n            </view>\r\n            <view class=\"status-item current\">\r\n                <text>A相电流:</text>\r\n                <text>{{deviceStatus.currentA || '--'}} A</text>\r\n            </view>\r\n            <view class=\"status-item current\">\r\n                <text>B相电流:</text>\r\n                <text>{{deviceStatus.currentB || '--'}} A</text>\r\n            </view>\r\n            <view class=\"status-item current\">\r\n                <text>C相电流:</text>\r\n                <text>{{deviceStatus.currentC || '--'}} A</text>\r\n            </view>\r\n            <view class=\"status-item energy\">\r\n                <text>用电量:</text>\r\n                <text>{{deviceStatus.energy || '--'}} kWh</text>\r\n            </view>\r\n            <view class=\"status-item pressure\">\r\n                <text>压力:</text>\r\n                <text>{{deviceStatus.pressure || '--'}} MPa</text>\r\n            </view>\r\n        </view>\r\n        \r\n        <!-- 继电器控制区 -->\r\n        <view class=\"control-panel\">\r\n            <view class=\"relay-item\">\r\n                <view class=\"relay-status\">\r\n                    <text class=\"relay-label\">继电器状态:</text>\r\n                    <text :class=\"[\r\n                        'relay-value',\r\n                        deviceStatus.relayStatus === '闭合' ? 'relay-on' : 'relay-off'\r\n                    ]\">\r\n                        {{deviceStatus.relayStatus || '--'}}\r\n                    </text>\r\n                </view>\r\n                <switch \r\n                    :checked=\"deviceStatus.relayStatus === '闭合'\" \r\n                    @change=\"(e) => toggleRelay(e.detail.value)\"\r\n                    :disabled=\"!deviceStatus.isOnline\"\r\n                    class=\"relay-switch\"\r\n                />\r\n            </view>\r\n        </view>\r\n    </view>\r\n</template>\r\n\r\n<script>\r\n// 添加基础URL配置\r\nconst BASE_URL = 'https://monitor.sanli.cn:3000/api'\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            deviceList: [], // 改为空数组，等待API获取数据\r\n            selectedIndex: 0,\r\n            deviceStatus: {\r\n                isOnline: false,\r\n                dtuNo: '',\r\n                deviceName: '',\r\n                rcvTime: '',\r\n                voltageAB: '',\r\n                voltageBC: '',\r\n                voltageCA: '',\r\n                currentA: '',\r\n                currentB: '',\r\n                currentC: '',\r\n                energy: '',\r\n                pressure: '',\r\n                relayStatus: ''\r\n            },\r\n            timer: null,\r\n            onlineDevices: [],\r\n            showPicker: false\r\n        }\r\n    },\r\n    onLoad() {\r\n        // 先获取设备列表，然后开始轮询\r\n        this.fetchDeviceList().then(() => {\r\n            if(this.deviceList.length > 0) {\r\n                this.startPolling()\r\n            }\r\n        })\r\n    },\r\n    onUnload() {\r\n        // 页面卸载时清除轮询\r\n        this.stopPolling()\r\n    },\r\n    computed: {\r\n        formattedTime() {\r\n            if (!this.deviceStatus.rcvTime) return '--'\r\n            const date = new Date(this.deviceStatus.rcvTime)\r\n            // 使用 padStart 补0\r\n            const month = String(date.getMonth() + 1).padStart(2, '0')\r\n            const day = String(date.getDate()).padStart(2, '0')\r\n            const hours = String(date.getHours()).padStart(2, '0')\r\n            const minutes = String(date.getMinutes()).padStart(2, '0')\r\n            const seconds = String(date.getSeconds()).padStart(2, '0')\r\n            \r\n            return `${date.getFullYear()}/${month}/${day} ${hours}:${minutes}:${seconds}`\r\n        }\r\n    },\r\n    methods: {\r\n        // 添加获取设备列表的方法\r\n        async fetchDeviceList() {\r\n            try {\r\n                const res = await uni.request({\r\n                    url: `${BASE_URL}/devices`,\r\n                    method: 'GET'\r\n                })\r\n                \r\n                if(res.data.success) {\r\n                    // 根据API返回的JSON格式转换设备列表\r\n                    this.deviceList = res.data.devices.map(device => ({\r\n                        id: device.DtuNo,         // 使用 DtuNo 字段\r\n                        name: device.DeviceName,   // 使用 DeviceName 字段\r\n                        isOnline: false           // 初始化为离线状态\r\n                    }))\r\n                    \r\n                    // 获取设备列表后立即更新在线状态\r\n                    await this.updateDevicesOnlineStatus()\r\n                } else {\r\n                    uni.showToast({\r\n                        title: '获取设备列表失败',\r\n                        icon: 'none'\r\n                    })\r\n                }\r\n            } catch(e) {\r\n                console.error('获取设备列表失败:', e)\r\n                uni.showToast({\r\n                    title: '获取设备列表失败',\r\n                    icon: 'none'\r\n                })\r\n            }\r\n        },\r\n\r\n        // 修改设备选择方法\r\n        async onDeviceChange(e) {\r\n            this.selectedIndex = e.detail.value\r\n            await this.getDeviceStatus() // 获取新设备状态\r\n        },\r\n\r\n        startPolling() {\r\n            if(this.deviceList.length === 0) return\r\n\r\n            // 立即执行更新\r\n            this.updateDevicesOnlineStatus()\r\n            this.getDeviceStatus()\r\n            \r\n            this.timer = setInterval(() => {\r\n                this.updateDevicesOnlineStatus()\r\n                this.getDeviceStatus()\r\n            }, 1000)\r\n        },\r\n\r\n        stopPolling() {\r\n            if(this.timer) {\r\n                clearInterval(this.timer)\r\n                this.timer = null\r\n            }\r\n        },\r\n        async getDeviceStatus() {\r\n            try {\r\n                const deviceId = this.deviceList[this.selectedIndex].id\r\n                \r\n                // 修改在线状态请求地址\r\n                const onlineRes = await uni.request({\r\n                    url: `${BASE_URL}/online-dtus`,\r\n                    method: 'GET'\r\n                })\r\n                \r\n                if(onlineRes.data.success) {\r\n                    const onlineDevices = onlineRes.data.devices.map(device => device.dtuNo)\r\n                    const isOnline = onlineDevices.includes(deviceId)\r\n                    this.deviceStatus.isOnline = isOnline\r\n                    \r\n                    // 如果设备在线，则获取详细状态\r\n                    if(isOnline) {\r\n                        // 修改设备状态请求地址\r\n                        const statusRes = await uni.request({\r\n                            url: `${BASE_URL}/dtu-status/${deviceId}`,\r\n                            method: 'GET'\r\n                        })\r\n                        \r\n                        if(statusRes.data.success) {\r\n                            this.deviceStatus = {\r\n                                ...statusRes.data.data,\r\n                                isOnline\r\n                            }\r\n                        }\r\n                    } else {\r\n                        // 如果设备离线，清空状态数据\r\n                        this.deviceStatus = {\r\n                            isOnline: false,\r\n                            dtuNo: deviceId,\r\n                            deviceName: this.deviceList[this.selectedIndex].name,\r\n                            rcvTime: '',\r\n                            voltageAB: '',\r\n                            voltageBC: '',\r\n                            voltageCA: '',\r\n                            currentA: '',\r\n                            currentB: '',\r\n                            currentC: '',\r\n                            energy: '',\r\n                            pressure: '',\r\n                            relayStatus: ''\r\n                        }\r\n                    }\r\n                }\r\n            } catch(e) {\r\n                console.error('获取设备状态失败:', e)\r\n                uni.showToast({\r\n                    title: '获取设备状态失败',\r\n                    icon: 'none'\r\n                })\r\n            }\r\n        },\r\n        async toggleRelay(status) {\r\n            const deviceId = this.deviceList[this.selectedIndex].id\r\n            \r\n            if (!this.deviceStatus.isOnline) {\r\n                uni.showToast({\r\n                    title: '设备离线，无法控制',\r\n                    icon: 'none'\r\n                })\r\n                return\r\n            }\r\n\r\n            try {\r\n                // 发送控制命令前先停止轮询\r\n                this.stopPolling()\r\n\r\n                // 修改继电器控制请求地址\r\n                const res = await uni.request({\r\n                    url: `${BASE_URL}/control/relay`,\r\n                    method: 'POST',\r\n                    data: {\r\n                        dtuNo: deviceId,\r\n                        command: status ? 'ON' : 'OFF'\r\n                    },\r\n                    header: {\r\n                        'content-type': 'application/json'\r\n                    }\r\n                })\r\n                \r\n                if(res.data.code === 0) {\r\n                    // 控制成功后立即更新UI显示\r\n                    this.deviceStatus.relayStatus = status ? '闭合' : '断开'\r\n                    \r\n                    uni.showToast({\r\n                        title: '操作成功',\r\n                        icon: 'success'\r\n                    })\r\n                    \r\n                    // 延迟时间也相应缩短\r\n                    setTimeout(() => {\r\n                        this.startPolling()\r\n                    }, 1000)  // 改为1000毫秒\r\n                } else {\r\n                    // 控制失败时立即恢复轮询\r\n                    this.startPolling()\r\n                    uni.showToast({\r\n                        title: res.data.message || '控制失败',\r\n                        icon: 'none'\r\n                    })\r\n                }\r\n            } catch(e) {\r\n                // 发生错误时立即恢复轮询\r\n                this.startPolling()\r\n                uni.showToast({\r\n                    title: '控制失败',\r\n                    icon: 'none'\r\n                })\r\n            }\r\n        },\r\n        // 添加新方法\r\n        showDeviceList() {\r\n            this.showPicker = true\r\n        },\r\n        \r\n        hidePicker() {\r\n            this.showPicker = false\r\n        },\r\n        \r\n        async selectDevice(index) {\r\n            this.selectedIndex = index\r\n            this.hidePicker()\r\n            await this.getDeviceStatus()\r\n        },\r\n\r\n        // 修改在线状态更新方法\r\n        async updateDevicesOnlineStatus() {\r\n            if(this.deviceList.length === 0) return\r\n\r\n            try {\r\n                const onlineRes = await uni.request({\r\n                    url: `${BASE_URL}/online-dtus`,\r\n                    method: 'GET'\r\n                })\r\n                \r\n                if(onlineRes.data.success) {\r\n                    const onlineDevices = onlineRes.data.devices.map(device => device.dtuNo)\r\n                    // 更新所有设备的在线状态\r\n                    this.deviceList = this.deviceList.map(device => ({\r\n                        ...device,\r\n                        isOnline: onlineDevices.includes(device.id)\r\n                    }))\r\n                }\r\n            } catch(e) {\r\n                console.error('获取在线设备失败:', e)\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n.container {\r\n    padding: 20px;\r\n}\r\n\r\n.device-select {\r\n    background: linear-gradient(135deg, #f8f9fa, #e9ecef);  /* 改用更柔和的渐变 */\r\n    padding: 12px;\r\n    border-radius: 6px;\r\n    margin-bottom: 15px;\r\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.08);  /* 更轻柔的阴影 */\r\n}\r\n\r\n.picker-button {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    background-color: #ffffff;\r\n    padding: 10px 15px;\r\n    border-radius: 4px;\r\n    border: 1px solid #e0e0e0;  /* 添加细边框 */\r\n}\r\n\r\n.device-label {\r\n    color: #666;  /* 更柔和的文字颜色 */\r\n    font-size: 14px;\r\n}\r\n\r\n.device-name {\r\n    color: #333;\r\n    font-size: 15px;\r\n    font-weight: 500;\r\n    margin: 0 10px;\r\n    flex: 1;\r\n    text-align: center;\r\n}\r\n\r\n.device-online {\r\n    color: #52c41a;\r\n}\r\n\r\n.device-offline {\r\n    color: #999;\r\n}\r\n\r\n.device-status {\r\n    font-size: 12px;\r\n    margin-left: 4px;\r\n}\r\n\r\n.picker-arrow {\r\n    color: #999;  /* 更柔和的箭头颜色 */\r\n    font-size: 12px;\r\n}\r\n\r\n.status-panel {\r\n    background: #ffffff;\r\n    padding: 20px;\r\n    border-radius: 12px;\r\n    margin-bottom: 20px;\r\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.06);\r\n    border: 1px solid #f0f0f0;\r\n}\r\n\r\n.status-item {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 12px 15px;\r\n    margin-bottom: 8px;\r\n    border-radius: 6px;\r\n    background: #f8f9fa;\r\n    transition: all 0.3s ease;\r\n}\r\n\r\n.status-item:hover {\r\n    background: #f0f2f5;\r\n}\r\n\r\n.status-item text:first-child {\r\n    color: #666;\r\n    font-size: 14px;\r\n}\r\n\r\n.status-item text:last-child {\r\n    color: #333;\r\n    font-size: 15px;\r\n    font-weight: 500;\r\n}\r\n\r\n.online {\r\n    color: #52c41a !important;\r\n    font-weight: 600;\r\n}\r\n\r\n.offline {\r\n    color: #ff4d4f !important;\r\n    font-weight: 600;\r\n}\r\n\r\n/* 为不同类型的数据添加不同的颜色 */\r\n.status-item.voltage text:last-child {\r\n    color: #1890ff;\r\n}\r\n\r\n.status-item.current text:last-child {\r\n    color: #722ed1;\r\n}\r\n\r\n.status-item.energy text:last-child {\r\n    color: #13c2c2;\r\n}\r\n\r\n.status-item.pressure text:last-child {\r\n    color: #fa8c16;\r\n}\r\n\r\n.control-panel {\r\n    background: #ffffff;\r\n    padding: 20px;\r\n    border-radius: 12px;\r\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.06);\r\n    border: 1px solid #f0f0f0;\r\n}\r\n\r\n.relay-item {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 15px;\r\n    background: #f8f9fa;\r\n    border-radius: 8px;\r\n    transition: all 0.3s ease;\r\n}\r\n\r\n.relay-item:hover {\r\n    background: #f0f2f5;\r\n}\r\n\r\n.relay-status {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n}\r\n\r\n.relay-label {\r\n    color: #666;\r\n    font-size: 14px;\r\n}\r\n\r\n.relay-value {\r\n    font-size: 15px;\r\n    font-weight: 500;\r\n    padding: 4px 12px;\r\n    border-radius: 4px;\r\n    background: #f0f0f0;\r\n}\r\n\r\n.relay-on {\r\n    color: #52c41a;\r\n    background: rgba(82, 196, 26, 0.1);\r\n}\r\n\r\n.relay-off {\r\n    color: #ff4d4f;\r\n    background: rgba(255, 77, 79, 0.1);\r\n}\r\n\r\n.relay-switch {\r\n    transform: scale(0.9);\r\n}\r\n\r\n/* 禁用状态的样式 */\r\n.relay-switch[disabled] {\r\n    opacity: 0.6;\r\n}\r\n\r\n/* 自定义下拉菜单样式（如果平台支持的话） */\r\n.picker-view-column {\r\n    line-height: 34px;\r\n}\r\n\r\n.picker-item-online {\r\n    color: #52c41a;\r\n}\r\n\r\n.picker-item-offline {\r\n    color: #999;\r\n}\r\n\r\n.custom-picker {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    z-index: 999;\r\n}\r\n\r\n.picker-mask {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: rgba(0, 0, 0, 0.5);\r\n}\r\n\r\n.picker-content {\r\n    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: #fff;\r\n    border-radius: 12px 12px 0 0;\r\n    overflow: hidden;\r\n    transform: translateY(0);\r\n    animation: slideUp 0.3s ease;\r\n}\r\n\r\n.picker-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 15px 20px;\r\n    border-bottom: 1px solid #f0f0f0;\r\n}\r\n\r\n.picker-close {\r\n    font-size: 24px;\r\n    color: #999;\r\n    padding: 0 10px;\r\n}\r\n\r\n.picker-body {\r\n    max-height: 60vh;\r\n    overflow-y: auto;\r\n}\r\n\r\n.picker-item {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 15px 20px;\r\n    border-bottom: 1px solid #f5f5f5;\r\n}\r\n\r\n.picker-item-online {\r\n    color: #52c41a;\r\n}\r\n\r\n.picker-item-offline {\r\n    color: #999;\r\n}\r\n\r\n.picker-item-selected {\r\n    background: #f0f7ff;\r\n}\r\n\r\n.device-status-tag {\r\n    font-size: 12px;\r\n    padding: 2px 8px;\r\n    border-radius: 10px;\r\n}\r\n\r\n.picker-item-online .device-status-tag {\r\n    background: rgba(82, 196, 26, 0.1);\r\n    color: #52c41a;\r\n}\r\n\r\n.picker-item-offline .device-status-tag {\r\n    background: rgba(0, 0, 0, 0.05);\r\n    color: #999;\r\n}\r\n\r\n@keyframes slideUp {\r\n    from {\r\n        transform: translateY(100%);\r\n    }\r\n    to {\r\n        transform: translateY(0);\r\n    }\r\n}\r\n\r\n.empty-list {\r\n    text-align: center;\r\n    padding: 40px 0;\r\n    color: #999;\r\n    font-size: 14px;\r\n}\r\n</style>\r\n","import MiniProgramPage from 'G:/桌面/app6/pages/index/index.vue'\nwx.createPage(MiniProgramPage)"],"names":["uni"],"mappings":";;AAsHA,MAAM,WAAW;AAEjB,MAAK,YAAU;AAAA,EACX,OAAO;AACH,WAAO;AAAA,MACH,YAAY,CAAE;AAAA;AAAA,MACd,eAAe;AAAA,MACf,cAAc;AAAA,QACV,UAAU;AAAA,QACV,OAAO;AAAA,QACP,YAAY;AAAA,QACZ,SAAS;AAAA,QACT,WAAW;AAAA,QACX,WAAW;AAAA,QACX,WAAW;AAAA,QACX,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,QAAQ;AAAA,QACR,UAAU;AAAA,QACV,aAAa;AAAA,MAChB;AAAA,MACD,OAAO;AAAA,MACP,eAAe,CAAE;AAAA,MACjB,YAAY;AAAA,IAChB;AAAA,EACH;AAAA,EACD,SAAS;AAEL,SAAK,kBAAkB,KAAK,MAAM;AAC9B,UAAG,KAAK,WAAW,SAAS,GAAG;AAC3B,aAAK,aAAa;AAAA,MACtB;AAAA,KACH;AAAA,EACJ;AAAA,EACD,WAAW;AAEP,SAAK,YAAY;AAAA,EACpB;AAAA,EACD,UAAU;AAAA,IACN,gBAAgB;AACZ,UAAI,CAAC,KAAK,aAAa;AAAS,eAAO;AACvC,YAAM,OAAO,IAAI,KAAK,KAAK,aAAa,OAAO;AAE/C,YAAM,QAAQ,OAAO,KAAK,SAAQ,IAAK,CAAC,EAAE,SAAS,GAAG,GAAG;AACzD,YAAM,MAAM,OAAO,KAAK,QAAS,CAAA,EAAE,SAAS,GAAG,GAAG;AAClD,YAAM,QAAQ,OAAO,KAAK,SAAU,CAAA,EAAE,SAAS,GAAG,GAAG;AACrD,YAAM,UAAU,OAAO,KAAK,WAAY,CAAA,EAAE,SAAS,GAAG,GAAG;AACzD,YAAM,UAAU,OAAO,KAAK,WAAY,CAAA,EAAE,SAAS,GAAG,GAAG;AAEzD,aAAO,GAAG,KAAK,YAAa,CAAA,IAAI,KAAK,IAAI,GAAG,IAAI,KAAK,IAAI,OAAO,IAAI,OAAO;AAAA,IAC/E;AAAA,EACH;AAAA,EACD,SAAS;AAAA;AAAA,IAEL,MAAM,kBAAkB;AACpB,UAAI;AACA,cAAM,MAAM,MAAMA,cAAG,MAAC,QAAQ;AAAA,UAC1B,KAAK,GAAG,QAAQ;AAAA,UAChB,QAAQ;AAAA,SACX;AAED,YAAG,IAAI,KAAK,SAAS;AAEjB,eAAK,aAAa,IAAI,KAAK,QAAQ,IAAI,aAAW;AAAA,YAC9C,IAAI,OAAO;AAAA;AAAA,YACX,MAAM,OAAO;AAAA;AAAA,YACb,UAAU;AAAA;AAAA,UACd,EAAE;AAGF,gBAAM,KAAK,0BAA0B;AAAA,eAClC;AACHA,wBAAAA,MAAI,UAAU;AAAA,YACV,OAAO;AAAA,YACP,MAAM;AAAA,WACT;AAAA,QACL;AAAA,MACJ,SAAQ,GAAG;AACPA,sBAAAA,MAAc,MAAA,SAAA,gCAAA,aAAa,CAAC;AAC5BA,sBAAAA,MAAI,UAAU;AAAA,UACV,OAAO;AAAA,UACP,MAAM;AAAA,SACT;AAAA,MACL;AAAA,IACH;AAAA;AAAA,IAGD,MAAM,eAAe,GAAG;AACpB,WAAK,gBAAgB,EAAE,OAAO;AAC9B,YAAM,KAAK,gBAAkB;AAAA,IAChC;AAAA,IAED,eAAe;AACX,UAAG,KAAK,WAAW,WAAW;AAAG;AAGjC,WAAK,0BAA0B;AAC/B,WAAK,gBAAgB;AAErB,WAAK,QAAQ,YAAY,MAAM;AAC3B,aAAK,0BAA0B;AAC/B,aAAK,gBAAgB;AAAA,MACxB,GAAE,GAAI;AAAA,IACV;AAAA,IAED,cAAc;AACV,UAAG,KAAK,OAAO;AACX,sBAAc,KAAK,KAAK;AACxB,aAAK,QAAQ;AAAA,MACjB;AAAA,IACH;AAAA,IACD,MAAM,kBAAkB;AACpB,UAAI;AACA,cAAM,WAAW,KAAK,WAAW,KAAK,aAAa,EAAE;AAGrD,cAAM,YAAY,MAAMA,cAAG,MAAC,QAAQ;AAAA,UAChC,KAAK,GAAG,QAAQ;AAAA,UAChB,QAAQ;AAAA,SACX;AAED,YAAG,UAAU,KAAK,SAAS;AACvB,gBAAM,gBAAgB,UAAU,KAAK,QAAQ,IAAI,YAAU,OAAO,KAAK;AACvE,gBAAM,WAAW,cAAc,SAAS,QAAQ;AAChD,eAAK,aAAa,WAAW;AAG7B,cAAG,UAAU;AAET,kBAAM,YAAY,MAAMA,cAAG,MAAC,QAAQ;AAAA,cAChC,KAAK,GAAG,QAAQ,eAAe,QAAQ;AAAA,cACvC,QAAQ;AAAA,aACX;AAED,gBAAG,UAAU,KAAK,SAAS;AACvB,mBAAK,eAAe;AAAA,gBAChB,GAAG,UAAU,KAAK;AAAA,gBAClB;AAAA,cACJ;AAAA,YACJ;AAAA,iBACG;AAEH,iBAAK,eAAe;AAAA,cAChB,UAAU;AAAA,cACV,OAAO;AAAA,cACP,YAAY,KAAK,WAAW,KAAK,aAAa,EAAE;AAAA,cAChD,SAAS;AAAA,cACT,WAAW;AAAA,cACX,WAAW;AAAA,cACX,WAAW;AAAA,cACX,UAAU;AAAA,cACV,UAAU;AAAA,cACV,UAAU;AAAA,cACV,QAAQ;AAAA,cACR,UAAU;AAAA,cACV,aAAa;AAAA,YACjB;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ,SAAQ,GAAG;AACPA,sBAAAA,MAAc,MAAA,SAAA,gCAAA,aAAa,CAAC;AAC5BA,sBAAAA,MAAI,UAAU;AAAA,UACV,OAAO;AAAA,UACP,MAAM;AAAA,SACT;AAAA,MACL;AAAA,IACH;AAAA,IACD,MAAM,YAAY,QAAQ;AACtB,YAAM,WAAW,KAAK,WAAW,KAAK,aAAa,EAAE;AAErD,UAAI,CAAC,KAAK,aAAa,UAAU;AAC7BA,sBAAAA,MAAI,UAAU;AAAA,UACV,OAAO;AAAA,UACP,MAAM;AAAA,SACT;AACD;AAAA,MACJ;AAEA,UAAI;AAEA,aAAK,YAAY;AAGjB,cAAM,MAAM,MAAMA,cAAG,MAAC,QAAQ;AAAA,UAC1B,KAAK,GAAG,QAAQ;AAAA,UAChB,QAAQ;AAAA,UACR,MAAM;AAAA,YACF,OAAO;AAAA,YACP,SAAS,SAAS,OAAO;AAAA,UAC5B;AAAA,UACD,QAAQ;AAAA,YACJ,gBAAgB;AAAA,UACpB;AAAA,SACH;AAED,YAAG,IAAI,KAAK,SAAS,GAAG;AAEpB,eAAK,aAAa,cAAc,SAAS,OAAO;AAEhDA,wBAAAA,MAAI,UAAU;AAAA,YACV,OAAO;AAAA,YACP,MAAM;AAAA,WACT;AAGD,qBAAW,MAAM;AACb,iBAAK,aAAa;AAAA,UACrB,GAAE,GAAI;AAAA,eACJ;AAEH,eAAK,aAAa;AAClBA,wBAAAA,MAAI,UAAU;AAAA,YACV,OAAO,IAAI,KAAK,WAAW;AAAA,YAC3B,MAAM;AAAA,WACT;AAAA,QACL;AAAA,MACJ,SAAQ,GAAG;AAEP,aAAK,aAAa;AAClBA,sBAAAA,MAAI,UAAU;AAAA,UACV,OAAO;AAAA,UACP,MAAM;AAAA,SACT;AAAA,MACL;AAAA,IACH;AAAA;AAAA,IAED,iBAAiB;AACb,WAAK,aAAa;AAAA,IACrB;AAAA,IAED,aAAa;AACT,WAAK,aAAa;AAAA,IACrB;AAAA,IAED,MAAM,aAAa,OAAO;AACtB,WAAK,gBAAgB;AACrB,WAAK,WAAW;AAChB,YAAM,KAAK,gBAAgB;AAAA,IAC9B;AAAA;AAAA,IAGD,MAAM,4BAA4B;AAC9B,UAAG,KAAK,WAAW,WAAW;AAAG;AAEjC,UAAI;AACA,cAAM,YAAY,MAAMA,cAAG,MAAC,QAAQ;AAAA,UAChC,KAAK,GAAG,QAAQ;AAAA,UAChB,QAAQ;AAAA,SACX;AAED,YAAG,UAAU,KAAK,SAAS;AACvB,gBAAM,gBAAgB,UAAU,KAAK,QAAQ,IAAI,YAAU,OAAO,KAAK;AAEvE,eAAK,aAAa,KAAK,WAAW,IAAI,aAAW;AAAA,YAC7C,GAAG;AAAA,YACH,UAAU,cAAc,SAAS,OAAO,EAAE;AAAA,UAC9C,EAAE;AAAA,QACN;AAAA,MACJ,SAAQ,GAAG;AACPA,sBAAAA,MAAc,MAAA,SAAA,gCAAA,aAAa,CAAC;AAAA,MAChC;AAAA,IACJ;AAAA,EACJ;AACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7XA,GAAG,WAAW,eAAe;"}