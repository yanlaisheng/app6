{"version":3,"file":"index.js","sources":["pages/index/index.vue","F:/FDM下载/HBuilderX.4.65.2025051206/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvaW5kZXgvaW5kZXgudnVl"],"sourcesContent":["<template>\r\n    <view class=\"container\">\r\n        <!-- 设备选择区 -->\r\n        <view class=\"device-select\">\r\n            <picker @change=\"onDeviceChange\" :value=\"selectedIndex\" :range=\"deviceList\" range-key=\"name\">\r\n                <view class=\"picker\">\r\n                    当前设备: {{deviceList[selectedIndex].name}}\r\n                </view>\r\n            </picker>\r\n        </view>\r\n        \r\n        <!-- 设备状态显示区 -->\r\n        <view class=\"status-panel\">\r\n            <view class=\"status-item\">\r\n                <text>设备状态:</text>\r\n                <text :class=\"{'online': deviceStatus.isOnline, 'offline': !deviceStatus.isOnline}\">\r\n                    {{deviceStatus.isOnline ? '在线' : '离线'}}\r\n                </text>\r\n            </view>\r\n            <view class=\"status-item\">\r\n                <text>更新时间:</text>\r\n                <text>{{deviceStatus.rcvTime || '--'}}</text>\r\n            </view>\r\n            <view class=\"status-item\">\r\n                <text>AB线电压:</text>\r\n                <text>{{deviceStatus.voltageAB || '--'}} V</text>\r\n            </view>\r\n            <view class=\"status-item\">\r\n                <text>BC线电压:</text>\r\n                <text>{{deviceStatus.voltageBC || '--'}} V</text>\r\n            </view>\r\n            <view class=\"status-item\">\r\n                <text>CA线电压:</text>\r\n                <text>{{deviceStatus.voltageCA || '--'}} V</text>\r\n            </view>\r\n            <view class=\"status-item\">\r\n                <text>A相电流:</text>\r\n                <text>{{deviceStatus.currentA || '--'}} A</text>\r\n            </view>\r\n            <view class=\"status-item\">\r\n                <text>B相电流:</text>\r\n                <text>{{deviceStatus.currentB || '--'}} A</text>\r\n            </view>\r\n            <view class=\"status-item\">\r\n                <text>C相电流:</text>\r\n                <text>{{deviceStatus.currentC || '--'}} A</text>\r\n            </view>\r\n            <view class=\"status-item\">\r\n                <text>用电量:</text>\r\n                <text>{{deviceStatus.energy || '--'}} kWh</text>\r\n            </view>\r\n            <view class=\"status-item\">\r\n                <text>压力:</text>\r\n                <text>{{deviceStatus.pressure || '--'}} MPa</text>\r\n            </view>\r\n        </view>\r\n        \r\n        <!-- 继电器控制区 -->\r\n        <view class=\"control-panel\">\r\n            <view class=\"relay-item\">\r\n                <text>继电器状态: {{deviceStatus.relayStatus || '--'}}</text>\r\n                <switch :checked=\"deviceStatus.relayStatus === '闭合'\" \r\n                        @change=\"(e) => toggleRelay(e.detail.value)\" />\r\n            </view>\r\n        </view>\r\n    </view>\r\n</template>\r\n\r\n<script>\r\n// 添加基础URL配置\r\nconst BASE_URL = 'https://monitor.sanli.cn:3000/api'\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            deviceList: [\r\n                { id: '13012345005', name: 'DTU设备1' },\r\n                { id: '13012345001', name: 'DTU设备2' },\r\n                { id: '13912345678', name: 'DTU设备3' },\r\n                { id: '13912345679', name: 'DTU设备4' }\r\n            ],\r\n            selectedIndex: 0,\r\n            deviceStatus: {\r\n                isOnline: false,\r\n                dtuNo: '',\r\n                deviceName: '',\r\n                rcvTime: '',\r\n                voltageAB: '',\r\n                voltageBC: '',\r\n                voltageCA: '',\r\n                currentA: '',\r\n                currentB: '',\r\n                currentC: '',\r\n                energy: '',\r\n                pressure: '',\r\n                relayStatus: ''\r\n            },\r\n            timer: null,\r\n            onlineDevices: []\r\n        }\r\n    },\r\n    onLoad() {\r\n        // 页面加载时开始轮询设备状态\r\n        this.startPolling()\r\n    },\r\n    onUnload() {\r\n        // 页面卸载时清除轮询\r\n        this.stopPolling()\r\n    },\r\n    methods: {\r\n        onDeviceChange(e) {\r\n            this.selectedIndex = e.detail.value\r\n            // 切换设备后立即获取新设备的状态\r\n            this.getDeviceStatus()\r\n        },\r\n\r\n        startPolling() {\r\n            // 立即执行一次当前设备状态查询\r\n            this.getDeviceStatus()\r\n            \r\n            // 将轮询间隔从5秒改为1秒\r\n            this.timer = setInterval(() => {\r\n                this.getDeviceStatus()\r\n            }, 1000)  // 改为1000毫秒\r\n        },\r\n\r\n        stopPolling() {\r\n            if(this.timer) {\r\n                clearInterval(this.timer)\r\n                this.timer = null\r\n            }\r\n        },\r\n        async getDeviceStatus() {\r\n            try {\r\n                const deviceId = this.deviceList[this.selectedIndex].id\r\n                \r\n                // 修改在线状态请求地址\r\n                const onlineRes = await uni.request({\r\n                    url: `${BASE_URL}/online-dtus`,\r\n                    method: 'GET'\r\n                })\r\n                \r\n                if(onlineRes.data.success) {\r\n                    const onlineDevices = onlineRes.data.devices.map(device => device.dtuNo)\r\n                    const isOnline = onlineDevices.includes(deviceId)\r\n                    this.deviceStatus.isOnline = isOnline\r\n                    \r\n                    // 如果设备在线，则获取详细状态\r\n                    if(isOnline) {\r\n                        // 修改设备状态请求地址\r\n                        const statusRes = await uni.request({\r\n                            url: `${BASE_URL}/dtu-status/${deviceId}`,\r\n                            method: 'GET'\r\n                        })\r\n                        \r\n                        if(statusRes.data.success) {\r\n                            this.deviceStatus = {\r\n                                ...statusRes.data.data,\r\n                                isOnline\r\n                            }\r\n                        }\r\n                    } else {\r\n                        // 如果设备离线，清空状态数据\r\n                        this.deviceStatus = {\r\n                            isOnline: false,\r\n                            dtuNo: deviceId,\r\n                            deviceName: this.deviceList[this.selectedIndex].name,\r\n                            rcvTime: '',\r\n                            voltageAB: '',\r\n                            voltageBC: '',\r\n                            voltageCA: '',\r\n                            currentA: '',\r\n                            currentB: '',\r\n                            currentC: '',\r\n                            energy: '',\r\n                            pressure: '',\r\n                            relayStatus: ''\r\n                        }\r\n                    }\r\n                }\r\n            } catch(e) {\r\n                console.error('获取设备状态失败:', e)\r\n                uni.showToast({\r\n                    title: '获取设备状态失败',\r\n                    icon: 'none'\r\n                })\r\n            }\r\n        },\r\n        async toggleRelay(status) {\r\n            const deviceId = this.deviceList[this.selectedIndex].id\r\n            \r\n            if (!this.deviceStatus.isOnline) {\r\n                uni.showToast({\r\n                    title: '设备离线，无法控制',\r\n                    icon: 'none'\r\n                })\r\n                return\r\n            }\r\n\r\n            try {\r\n                // 发送控制命令前先停止轮询\r\n                this.stopPolling()\r\n\r\n                // 修改继电器控制请求地址\r\n                const res = await uni.request({\r\n                    url: `${BASE_URL}/control/relay`,\r\n                    method: 'POST',\r\n                    data: {\r\n                        dtuNo: deviceId,\r\n                        command: status ? 'ON' : 'OFF'\r\n                    },\r\n                    header: {\r\n                        'content-type': 'application/json'\r\n                    }\r\n                })\r\n                \r\n                if(res.data.code === 0) {\r\n                    // 控制成功后立即更新UI显示\r\n                    this.deviceStatus.relayStatus = status ? '闭合' : '断开'\r\n                    \r\n                    uni.showToast({\r\n                        title: '操作成功',\r\n                        icon: 'success'\r\n                    })\r\n                    \r\n                    // 延迟时间也相应缩短\r\n                    setTimeout(() => {\r\n                        this.startPolling()\r\n                    }, 1000)  // 改为1000毫秒\r\n                } else {\r\n                    // 控制失败时立即恢复轮询\r\n                    this.startPolling()\r\n                    uni.showToast({\r\n                        title: res.data.message || '控制失败',\r\n                        icon: 'none'\r\n                    })\r\n                }\r\n            } catch(e) {\r\n                // 发生错误时立即恢复轮询\r\n                this.startPolling()\r\n                uni.showToast({\r\n                    title: '控制失败',\r\n                    icon: 'none'\r\n                })\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n.container {\r\n    padding: 20px;\r\n}\r\n\r\n.device-select {\r\n    background-color: #fff;\r\n    padding: 15px;\r\n    border-radius: 8px;\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.status-panel {\r\n    background-color: #fff;\r\n    padding: 20px;\r\n    border-radius: 8px;\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.status-item {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-bottom: 15px;\r\n    font-size: 14px;\r\n}\r\n\r\n.online {\r\n    color: #4cd964;\r\n}\r\n\r\n.offline {\r\n    color: #dd524d;\r\n}\r\n\r\n.control-panel {\r\n    background-color: #fff;\r\n    padding: 20px;\r\n    border-radius: 8px;\r\n}\r\n\r\n.relay-item {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 10px 0;\r\n}\r\n</style>\r\n","import MiniProgramPage from 'G:/桌面/app6/pages/index/index.vue'\nwx.createPage(MiniProgramPage)"],"names":["uni"],"mappings":"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"}