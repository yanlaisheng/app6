{"version":3,"names":["BASE_URL","_sfc_main","data","deviceList","selectedIndex","deviceStatus","isOnline","dtuNo","deviceName","rcvTime","voltageAB","voltageBC","voltageCA","currentA","currentB","currentC","energy","pressure","relayStatus","timer","onlineDevices","showPicker","onLoad","_this","fetchDeviceList","then","length","startPolling","onUnload","stopPolling","computed","formattedTime","date","Date","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","concat","getFullYear","methods","_this2","_asyncToGenerator2","_regeneratorRuntime2","mark","_callee","res","wrap","_callee$","_context","prev","next","common_vendor","index","request","url","method","sent","success","devices","map","device","id","DtuNo","name","DeviceName","updateDevicesOnlineStatus","showToast","title","icon","t0","__f__","stop","onDeviceChange","e","_this3","_callee2","_callee2$","_context2","detail","value","getDeviceStatus","_this4","setInterval","clearInterval","_this5","_callee3","deviceId","onlineRes","statusRes","_callee3$","_context3","includes","_objectSpread2","toggleRelay","status","_this6","_callee4","_callee4$","_context4","abrupt","command","header","code","setTimeout","message","showDeviceList","hidePicker","selectDevice","_this7","_callee5","_callee5$","_context5","_this8","_callee6","_callee6$","_context6","wx","createPage","MiniProgramPage"],"sources":["index.vue","F:/FDM下载/HBuilderX.4.65.2025051206/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvaW5kZXgvaW5kZXgudnVl"],"sourcesContent":["<template>\r\n    <!-- 替换原有的picker部分 -->\r\n    <view class=\"device-select\">\r\n        <view class=\"picker-button\" @tap=\"showDeviceList\">\r\n            <text class=\"device-label\">当前设备:</text>\r\n            <text :class=\"[\r\n                'device-name',\r\n                deviceList[selectedIndex].isOnline ? 'device-online' : 'device-offline'\r\n            ]\">\r\n                {{deviceList[selectedIndex].name}}\r\n                <text class=\"device-status\">{{deviceList[selectedIndex].isOnline ? '(在线)' : '(离线)'}}</text>\r\n            </text>\r\n            <text class=\"picker-arrow\">▼</text>\r\n        </view>\r\n    </view>\r\n\r\n    <!-- 添加自定义弹出层 -->\r\n    <view class=\"custom-picker\" v-if=\"showPicker\" @tap.stop=\"hidePicker\">\r\n        <view class=\"picker-mask\"></view>\r\n        <view class=\"picker-content\" @tap.stop>\r\n            <view class=\"picker-header\">\r\n                <text>选择设备</text>\r\n                <text class=\"picker-close\" @tap=\"hidePicker\">×</text>\r\n            </view>\r\n            <view class=\"picker-body\">\r\n                <view \r\n                    v-for=\"(device, index) in deviceList\" \r\n                    :key=\"device.id\"\r\n                    :class=\"[\r\n                        'picker-item',\r\n                        device.isOnline ? 'picker-item-online' : 'picker-item-offline',\r\n                        selectedIndex === index ? 'picker-item-selected' : ''\r\n                    ]\"\r\n                    @tap=\"selectDevice(index)\"\r\n                >\r\n                    <text>{{device.name}}</text>\r\n                    <text class=\"device-status-tag\">{{device.isOnline ? '在线' : '离线'}}</text>\r\n                </view>\r\n            </view>\r\n        </view>\r\n    </view>\r\n\r\n    <view class=\"container\">\r\n        <view v-if=\"deviceList.length === 0\" class=\"empty-list\">\r\n            <text>暂无可用设备</text>\r\n        </view>\r\n        \r\n        <!-- 设备状态显示区 -->\r\n        <view class=\"status-panel\">\r\n            <view class=\"status-item status-connection\">\r\n                <text>设备状态:</text>\r\n                <text :class=\"{'online': deviceStatus.isOnline, 'offline': !deviceStatus.isOnline}\">\r\n                    {{deviceStatus.isOnline ? '在线' : '离线'}}\r\n                </text>\r\n            </view>\r\n            <view class=\"status-item status-time\">\r\n                <text>更新时间:</text>\r\n                <text>{{formattedTime}}</text>\r\n            </view>\r\n            <view class=\"status-item voltage\">\r\n                <text>AB线电压:</text>\r\n                <text>{{deviceStatus.voltageAB || '--'}} V</text>\r\n            </view>\r\n            <view class=\"status-item voltage\">\r\n                <text>BC线电压:</text>\r\n                <text>{{deviceStatus.voltageBC || '--'}} V</text>\r\n            </view>\r\n            <view class=\"status-item voltage\">\r\n                <text>CA线电压:</text>\r\n                <text>{{deviceStatus.voltageCA || '--'}} V</text>\r\n            </view>\r\n            <view class=\"status-item current\">\r\n                <text>A相电流:</text>\r\n                <text>{{deviceStatus.currentA || '--'}} A</text>\r\n            </view>\r\n            <view class=\"status-item current\">\r\n                <text>B相电流:</text>\r\n                <text>{{deviceStatus.currentB || '--'}} A</text>\r\n            </view>\r\n            <view class=\"status-item current\">\r\n                <text>C相电流:</text>\r\n                <text>{{deviceStatus.currentC || '--'}} A</text>\r\n            </view>\r\n            <view class=\"status-item energy\">\r\n                <text>用电量:</text>\r\n                <text>{{deviceStatus.energy || '--'}} kWh</text>\r\n            </view>\r\n            <view class=\"status-item pressure\">\r\n                <text>压力:</text>\r\n                <text>{{deviceStatus.pressure || '--'}} MPa</text>\r\n            </view>\r\n        </view>\r\n        \r\n        <!-- 继电器控制区 -->\r\n        <view class=\"control-panel\">\r\n            <view class=\"relay-item\">\r\n                <view class=\"relay-status\">\r\n                    <text class=\"relay-label\">继电器状态:</text>\r\n                    <text :class=\"[\r\n                        'relay-value',\r\n                        deviceStatus.relayStatus === '闭合' ? 'relay-on' : 'relay-off'\r\n                    ]\">\r\n                        {{deviceStatus.relayStatus || '--'}}\r\n                    </text>\r\n                </view>\r\n                <switch \r\n                    :checked=\"deviceStatus.relayStatus === '闭合'\" \r\n                    @change=\"(e) => toggleRelay(e.detail.value)\"\r\n                    :disabled=\"!deviceStatus.isOnline\"\r\n                    class=\"relay-switch\"\r\n                />\r\n            </view>\r\n        </view>\r\n    </view>\r\n</template>\r\n\r\n<script>\r\n// 添加基础URL配置\r\nconst BASE_URL = 'https://monitor.sanli.cn:3000/api'\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            deviceList: [], // 改为空数组，等待API获取数据\r\n            selectedIndex: 0,\r\n            deviceStatus: {\r\n                isOnline: false,\r\n                dtuNo: '',\r\n                deviceName: '',\r\n                rcvTime: '',\r\n                voltageAB: '',\r\n                voltageBC: '',\r\n                voltageCA: '',\r\n                currentA: '',\r\n                currentB: '',\r\n                currentC: '',\r\n                energy: '',\r\n                pressure: '',\r\n                relayStatus: ''\r\n            },\r\n            timer: null,\r\n            onlineDevices: [],\r\n            showPicker: false\r\n        }\r\n    },\r\n    onLoad() {\r\n        // 先获取设备列表，然后开始轮询\r\n        this.fetchDeviceList().then(() => {\r\n            if(this.deviceList.length > 0) {\r\n                this.startPolling()\r\n            }\r\n        })\r\n    },\r\n    onUnload() {\r\n        // 页面卸载时清除轮询\r\n        this.stopPolling()\r\n    },\r\n    computed: {\r\n        formattedTime() {\r\n            if (!this.deviceStatus.rcvTime) return '--'\r\n            const date = new Date(this.deviceStatus.rcvTime)\r\n            // 使用 padStart 补0\r\n            const month = String(date.getMonth() + 1).padStart(2, '0')\r\n            const day = String(date.getDate()).padStart(2, '0')\r\n            const hours = String(date.getHours()).padStart(2, '0')\r\n            const minutes = String(date.getMinutes()).padStart(2, '0')\r\n            const seconds = String(date.getSeconds()).padStart(2, '0')\r\n            \r\n            return `${date.getFullYear()}/${month}/${day} ${hours}:${minutes}:${seconds}`\r\n        }\r\n    },\r\n    methods: {\r\n        // 添加获取设备列表的方法\r\n        async fetchDeviceList() {\r\n            try {\r\n                const res = await uni.request({\r\n                    url: `${BASE_URL}/devices`,\r\n                    method: 'GET'\r\n                })\r\n                \r\n                if(res.data.success) {\r\n                    // 根据API返回的JSON格式转换设备列表\r\n                    this.deviceList = res.data.devices.map(device => ({\r\n                        id: device.DtuNo,         // 使用 DtuNo 字段\r\n                        name: device.DeviceName,   // 使用 DeviceName 字段\r\n                        isOnline: false           // 初始化为离线状态\r\n                    }))\r\n                    \r\n                    // 获取设备列表后立即更新在线状态\r\n                    await this.updateDevicesOnlineStatus()\r\n                } else {\r\n                    uni.showToast({\r\n                        title: '获取设备列表失败',\r\n                        icon: 'none'\r\n                    })\r\n                }\r\n            } catch(e) {\r\n                console.error('获取设备列表失败:', e)\r\n                uni.showToast({\r\n                    title: '获取设备列表失败',\r\n                    icon: 'none'\r\n                })\r\n            }\r\n        },\r\n\r\n        // 修改设备选择方法\r\n        async onDeviceChange(e) {\r\n            this.selectedIndex = e.detail.value\r\n            await this.getDeviceStatus() // 获取新设备状态\r\n        },\r\n\r\n        startPolling() {\r\n            if(this.deviceList.length === 0) return\r\n\r\n            // 立即执行更新\r\n            this.updateDevicesOnlineStatus()\r\n            this.getDeviceStatus()\r\n            \r\n            this.timer = setInterval(() => {\r\n                this.updateDevicesOnlineStatus()\r\n                this.getDeviceStatus()\r\n            }, 1000)\r\n        },\r\n\r\n        stopPolling() {\r\n            if(this.timer) {\r\n                clearInterval(this.timer)\r\n                this.timer = null\r\n            }\r\n        },\r\n        async getDeviceStatus() {\r\n            try {\r\n                const deviceId = this.deviceList[this.selectedIndex].id\r\n                \r\n                // 修改在线状态请求地址\r\n                const onlineRes = await uni.request({\r\n                    url: `${BASE_URL}/online-dtus`,\r\n                    method: 'GET'\r\n                })\r\n                \r\n                if(onlineRes.data.success) {\r\n                    const onlineDevices = onlineRes.data.devices.map(device => device.dtuNo)\r\n                    const isOnline = onlineDevices.includes(deviceId)\r\n                    this.deviceStatus.isOnline = isOnline\r\n                    \r\n                    // 如果设备在线，则获取详细状态\r\n                    if(isOnline) {\r\n                        // 修改设备状态请求地址\r\n                        const statusRes = await uni.request({\r\n                            url: `${BASE_URL}/dtu-status/${deviceId}`,\r\n                            method: 'GET'\r\n                        })\r\n                        \r\n                        if(statusRes.data.success) {\r\n                            this.deviceStatus = {\r\n                                ...statusRes.data.data,\r\n                                isOnline\r\n                            }\r\n                        }\r\n                    } else {\r\n                        // 如果设备离线，清空状态数据\r\n                        this.deviceStatus = {\r\n                            isOnline: false,\r\n                            dtuNo: deviceId,\r\n                            deviceName: this.deviceList[this.selectedIndex].name,\r\n                            rcvTime: '',\r\n                            voltageAB: '',\r\n                            voltageBC: '',\r\n                            voltageCA: '',\r\n                            currentA: '',\r\n                            currentB: '',\r\n                            currentC: '',\r\n                            energy: '',\r\n                            pressure: '',\r\n                            relayStatus: ''\r\n                        }\r\n                    }\r\n                }\r\n            } catch(e) {\r\n                console.error('获取设备状态失败:', e)\r\n                uni.showToast({\r\n                    title: '获取设备状态失败',\r\n                    icon: 'none'\r\n                })\r\n            }\r\n        },\r\n        async toggleRelay(status) {\r\n            const deviceId = this.deviceList[this.selectedIndex].id\r\n            \r\n            if (!this.deviceStatus.isOnline) {\r\n                uni.showToast({\r\n                    title: '设备离线，无法控制',\r\n                    icon: 'none'\r\n                })\r\n                return\r\n            }\r\n\r\n            try {\r\n                // 发送控制命令前先停止轮询\r\n                this.stopPolling()\r\n\r\n                // 修改继电器控制请求地址\r\n                const res = await uni.request({\r\n                    url: `${BASE_URL}/control/relay`,\r\n                    method: 'POST',\r\n                    data: {\r\n                        dtuNo: deviceId,\r\n                        command: status ? 'ON' : 'OFF'\r\n                    },\r\n                    header: {\r\n                        'content-type': 'application/json'\r\n                    }\r\n                })\r\n                \r\n                if(res.data.code === 0) {\r\n                    // 控制成功后立即更新UI显示\r\n                    this.deviceStatus.relayStatus = status ? '闭合' : '断开'\r\n                    \r\n                    uni.showToast({\r\n                        title: '操作成功',\r\n                        icon: 'success'\r\n                    })\r\n                    \r\n                    // 延迟时间也相应缩短\r\n                    setTimeout(() => {\r\n                        this.startPolling()\r\n                    }, 1000)  // 改为1000毫秒\r\n                } else {\r\n                    // 控制失败时立即恢复轮询\r\n                    this.startPolling()\r\n                    uni.showToast({\r\n                        title: res.data.message || '控制失败',\r\n                        icon: 'none'\r\n                    })\r\n                }\r\n            } catch(e) {\r\n                // 发生错误时立即恢复轮询\r\n                this.startPolling()\r\n                uni.showToast({\r\n                    title: '控制失败',\r\n                    icon: 'none'\r\n                })\r\n            }\r\n        },\r\n        // 添加新方法\r\n        showDeviceList() {\r\n            this.showPicker = true\r\n        },\r\n        \r\n        hidePicker() {\r\n            this.showPicker = false\r\n        },\r\n        \r\n        async selectDevice(index) {\r\n            this.selectedIndex = index\r\n            this.hidePicker()\r\n            await this.getDeviceStatus()\r\n        },\r\n\r\n        // 修改在线状态更新方法\r\n        async updateDevicesOnlineStatus() {\r\n            if(this.deviceList.length === 0) return\r\n\r\n            try {\r\n                const onlineRes = await uni.request({\r\n                    url: `${BASE_URL}/online-dtus`,\r\n                    method: 'GET'\r\n                })\r\n                \r\n                if(onlineRes.data.success) {\r\n                    const onlineDevices = onlineRes.data.devices.map(device => device.dtuNo)\r\n                    // 更新所有设备的在线状态\r\n                    this.deviceList = this.deviceList.map(device => ({\r\n                        ...device,\r\n                        isOnline: onlineDevices.includes(device.id)\r\n                    }))\r\n                }\r\n            } catch(e) {\r\n                console.error('获取在线设备失败:', e)\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n.container {\r\n    padding: 20px;\r\n}\r\n\r\n.device-select {\r\n    background: linear-gradient(135deg, #f8f9fa, #e9ecef);  /* 改用更柔和的渐变 */\r\n    padding: 12px;\r\n    border-radius: 6px;\r\n    margin-bottom: 15px;\r\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.08);  /* 更轻柔的阴影 */\r\n}\r\n\r\n.picker-button {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    background-color: #ffffff;\r\n    padding: 10px 15px;\r\n    border-radius: 4px;\r\n    border: 1px solid #e0e0e0;  /* 添加细边框 */\r\n}\r\n\r\n.device-label {\r\n    color: #666;  /* 更柔和的文字颜色 */\r\n    font-size: 14px;\r\n}\r\n\r\n.device-name {\r\n    color: #333;\r\n    font-size: 15px;\r\n    font-weight: 500;\r\n    margin: 0 10px;\r\n    flex: 1;\r\n    text-align: center;\r\n}\r\n\r\n.device-online {\r\n    color: #52c41a;\r\n}\r\n\r\n.device-offline {\r\n    color: #999;\r\n}\r\n\r\n.device-status {\r\n    font-size: 12px;\r\n    margin-left: 4px;\r\n}\r\n\r\n.picker-arrow {\r\n    color: #999;  /* 更柔和的箭头颜色 */\r\n    font-size: 12px;\r\n}\r\n\r\n.status-panel {\r\n    background: #ffffff;\r\n    padding: 20px;\r\n    border-radius: 12px;\r\n    margin-bottom: 20px;\r\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.06);\r\n    border: 1px solid #f0f0f0;\r\n}\r\n\r\n.status-item {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 12px 15px;\r\n    margin-bottom: 8px;\r\n    border-radius: 6px;\r\n    background: #f8f9fa;\r\n    transition: all 0.3s ease;\r\n}\r\n\r\n.status-item:hover {\r\n    background: #f0f2f5;\r\n}\r\n\r\n.status-item text:first-child {\r\n    color: #666;\r\n    font-size: 14px;\r\n}\r\n\r\n.status-item text:last-child {\r\n    color: #333;\r\n    font-size: 15px;\r\n    font-weight: 500;\r\n}\r\n\r\n.online {\r\n    color: #52c41a !important;\r\n    font-weight: 600;\r\n}\r\n\r\n.offline {\r\n    color: #ff4d4f !important;\r\n    font-weight: 600;\r\n}\r\n\r\n/* 为不同类型的数据添加不同的颜色 */\r\n.status-item.voltage text:last-child {\r\n    color: #1890ff;\r\n}\r\n\r\n.status-item.current text:last-child {\r\n    color: #722ed1;\r\n}\r\n\r\n.status-item.energy text:last-child {\r\n    color: #13c2c2;\r\n}\r\n\r\n.status-item.pressure text:last-child {\r\n    color: #fa8c16;\r\n}\r\n\r\n.control-panel {\r\n    background: #ffffff;\r\n    padding: 20px;\r\n    border-radius: 12px;\r\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.06);\r\n    border: 1px solid #f0f0f0;\r\n}\r\n\r\n.relay-item {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 15px;\r\n    background: #f8f9fa;\r\n    border-radius: 8px;\r\n    transition: all 0.3s ease;\r\n}\r\n\r\n.relay-item:hover {\r\n    background: #f0f2f5;\r\n}\r\n\r\n.relay-status {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n}\r\n\r\n.relay-label {\r\n    color: #666;\r\n    font-size: 14px;\r\n}\r\n\r\n.relay-value {\r\n    font-size: 15px;\r\n    font-weight: 500;\r\n    padding: 4px 12px;\r\n    border-radius: 4px;\r\n    background: #f0f0f0;\r\n}\r\n\r\n.relay-on {\r\n    color: #52c41a;\r\n    background: rgba(82, 196, 26, 0.1);\r\n}\r\n\r\n.relay-off {\r\n    color: #ff4d4f;\r\n    background: rgba(255, 77, 79, 0.1);\r\n}\r\n\r\n.relay-switch {\r\n    transform: scale(0.9);\r\n}\r\n\r\n/* 禁用状态的样式 */\r\n.relay-switch[disabled] {\r\n    opacity: 0.6;\r\n}\r\n\r\n/* 自定义下拉菜单样式（如果平台支持的话） */\r\n.picker-view-column {\r\n    line-height: 34px;\r\n}\r\n\r\n.picker-item-online {\r\n    color: #52c41a;\r\n}\r\n\r\n.picker-item-offline {\r\n    color: #999;\r\n}\r\n\r\n.custom-picker {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    z-index: 999;\r\n}\r\n\r\n.picker-mask {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: rgba(0, 0, 0, 0.5);\r\n}\r\n\r\n.picker-content {\r\n    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: #fff;\r\n    border-radius: 12px 12px 0 0;\r\n    overflow: hidden;\r\n    transform: translateY(0);\r\n    animation: slideUp 0.3s ease;\r\n}\r\n\r\n.picker-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 15px 20px;\r\n    border-bottom: 1px solid #f0f0f0;\r\n}\r\n\r\n.picker-close {\r\n    font-size: 24px;\r\n    color: #999;\r\n    padding: 0 10px;\r\n}\r\n\r\n.picker-body {\r\n    max-height: 60vh;\r\n    overflow-y: auto;\r\n}\r\n\r\n.picker-item {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 15px 20px;\r\n    border-bottom: 1px solid #f5f5f5;\r\n}\r\n\r\n.picker-item-online {\r\n    color: #52c41a;\r\n}\r\n\r\n.picker-item-offline {\r\n    color: #999;\r\n}\r\n\r\n.picker-item-selected {\r\n    background: #f0f7ff;\r\n}\r\n\r\n.device-status-tag {\r\n    font-size: 12px;\r\n    padding: 2px 8px;\r\n    border-radius: 10px;\r\n}\r\n\r\n.picker-item-online .device-status-tag {\r\n    background: rgba(82, 196, 26, 0.1);\r\n    color: #52c41a;\r\n}\r\n\r\n.picker-item-offline .device-status-tag {\r\n    background: rgba(0, 0, 0, 0.05);\r\n    color: #999;\r\n}\r\n\r\n@keyframes slideUp {\r\n    from {\r\n        transform: translateY(100%);\r\n    }\r\n    to {\r\n        transform: translateY(0);\r\n    }\r\n}\r\n\r\n.empty-list {\r\n    text-align: center;\r\n    padding: 40px 0;\r\n    color: #999;\r\n    font-size: 14px;\r\n}\r\n</style>\r\n","import MiniProgramPage from 'G:/桌面/app6/pages/index/index.vue'\nwx.createPage(MiniProgramPage)"],"mappings":";;;;;;;;AAsHA,IAAMA,QAAA,GAAW;AAEjB,IAAKC,SAAA,GAAU;EACXC,IAAA,WAAAA,KAAA,EAAO;IACH,OAAO;MACHC,UAAA,EAAY,EAAE;MAAA;MACdC,aAAA,EAAe;MACfC,YAAA,EAAc;QACVC,QAAA,EAAU;QACVC,KAAA,EAAO;QACPC,UAAA,EAAY;QACZC,OAAA,EAAS;QACTC,SAAA,EAAW;QACXC,SAAA,EAAW;QACXC,SAAA,EAAW;QACXC,QAAA,EAAU;QACVC,QAAA,EAAU;QACVC,QAAA,EAAU;QACVC,MAAA,EAAQ;QACRC,QAAA,EAAU;QACVC,WAAA,EAAa;MAChB;MACDC,KAAA,EAAO;MACPC,aAAA,EAAe,EAAE;MACjBC,UAAA,EAAY;IAChB;EACH;EACDC,MAAA,WAAAA,OAAA,EAAS;IAAA,IAAAC,KAAA;IAEL,KAAKC,eAAA,GAAkBC,IAAA,CAAK,YAAM;MAC9B,IAAGF,KAAA,CAAKpB,UAAA,CAAWuB,MAAA,GAAS,GAAG;QAC3BH,KAAA,CAAKI,YAAA,EAAa;MACtB;IAAA,CACH;EACJ;EACDC,QAAA,WAAAA,SAAA,EAAW;IAEP,KAAKC,WAAA,EAAY;EACpB;EACDC,QAAA,EAAU;IACNC,aAAA,WAAAA,cAAA,EAAgB;MACZ,IAAI,CAAC,KAAK1B,YAAA,CAAaI,OAAA,EAAS,OAAO;MACvC,IAAMuB,IAAA,GAAO,IAAIC,IAAA,CAAK,KAAK5B,YAAA,CAAaI,OAAO;MAE/C,IAAMyB,KAAA,GAAQC,MAAA,CAAOH,IAAA,CAAKI,QAAA,EAAQ,GAAK,CAAC,EAAEC,QAAA,CAAS,GAAG,GAAG;MACzD,IAAMC,GAAA,GAAMH,MAAA,CAAOH,IAAA,CAAKO,OAAA,EAAS,EAAEF,QAAA,CAAS,GAAG,GAAG;MAClD,IAAMG,KAAA,GAAQL,MAAA,CAAOH,IAAA,CAAKS,QAAA,EAAU,EAAEJ,QAAA,CAAS,GAAG,GAAG;MACrD,IAAMK,OAAA,GAAUP,MAAA,CAAOH,IAAA,CAAKW,UAAA,EAAY,EAAEN,QAAA,CAAS,GAAG,GAAG;MACzD,IAAMO,OAAA,GAAUT,MAAA,CAAOH,IAAA,CAAKa,UAAA,EAAY,EAAER,QAAA,CAAS,GAAG,GAAG;MAEzD,UAAAS,MAAA,CAAUd,IAAA,CAAKe,WAAA,EAAa,OAAAD,MAAA,CAAIZ,KAAK,OAAAY,MAAA,CAAIR,GAAG,OAAAQ,MAAA,CAAIN,KAAK,OAAAM,MAAA,CAAIJ,OAAO,OAAAI,MAAA,CAAIF,OAAO;IAC/E;EACH;EACDI,OAAA,EAAS;IAAA;IAECxB,eAAA,WAAAA,gBAAA,EAAkB;MAAA,IAAAyB,MAAA;MAAA,OAAAC,kBAAA,eAAAC,oBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,GAAA;QAAA,OAAAH,oBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAEEC,aAAA,CAAGC,KAAA,CAACC,OAAA,CAAQ;gBAC1BC,GAAA,KAAAjB,MAAA,CAAQ9C,QAAQ;gBAChBgE,MAAA,EAAQ;cAAA,CACX;YAAA;cAHKV,GAAA,GAAAG,QAAA,CAAAQ,IAAA;cAAA,KAKHX,GAAA,CAAIpD,IAAA,CAAKgE,OAAA;gBAAAT,QAAA,CAAAE,IAAA;gBAAA;cAAA;cAERV,MAAA,CAAK9C,UAAA,GAAamD,GAAA,CAAIpD,IAAA,CAAKiE,OAAA,CAAQC,GAAA,CAAI,UAAAC,MAAA;gBAAA,OAAW;kBAC9CC,EAAA,EAAID,MAAA,CAAOE,KAAA;kBAAA;kBACXC,IAAA,EAAMH,MAAA,CAAOI,UAAA;kBAAA;kBACbnE,QAAA,EAAU;kBAAA;gBACd;cAAA,CAAE;cAAAmD,QAAA,CAAAE,IAAA;cAAA,OAGIV,MAAA,CAAKyB,yBAAA,EAA0B;YAAA;cAAAjB,QAAA,CAAAE,IAAA;cAAA;YAAA;cAErCC,aAAA,CAAAC,KAAA,CAAIc,SAAA,CAAU;gBACVC,KAAA,EAAO;gBACPC,IAAA,EAAM;cAAA,CACT;YAAA;cAAApB,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAqB,EAAA,GAAArB,QAAA;cAGLG,aAAA,CAAAC,KAAA,CAAckB,KAAA,uDAAAtB,QAAA,CAAAqB,EAAA,CAAc;cAC5BlB,aAAA,CAAAC,KAAA,CAAIc,SAAA,CAAU;gBACVC,KAAA,EAAO;gBACPC,IAAA,EAAM;cAAA,CACT;YAAA;YAAA;cAAA,OAAApB,QAAA,CAAAuB,IAAA;UAAA;QAAA,GAAA3B,OAAA;MAAA;IAER;IAAA;IAGK4B,cAAA,WAAAA,eAAeC,CAAA,EAAG;MAAA,IAAAC,MAAA;MAAA,OAAAjC,kBAAA,eAAAC,oBAAA,GAAAC,IAAA,UAAAgC,SAAA;QAAA,OAAAjC,oBAAA,GAAAI,IAAA,UAAA8B,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAA5B,IAAA,GAAA4B,SAAA,CAAA3B,IAAA;YAAA;cACpBwB,MAAA,CAAK/E,aAAA,GAAgB8E,CAAA,CAAEK,MAAA,CAAOC,KAAA;cAAAF,SAAA,CAAA3B,IAAA;cAAA,OACxBwB,MAAA,CAAKM,eAAA,EAAkB;YAAA;YAAA;cAAA,OAAAH,SAAA,CAAAN,IAAA;UAAA;QAAA,GAAAI,QAAA;MAAA;IAChC;IAEDzD,YAAA,WAAAA,aAAA,EAAe;MAAA,IAAA+D,MAAA;MACX,IAAG,KAAKvF,UAAA,CAAWuB,MAAA,KAAW,GAAG;MAGjC,KAAKgD,yBAAA,EAA0B;MAC/B,KAAKe,eAAA,EAAgB;MAErB,KAAKtE,KAAA,GAAQwE,WAAA,CAAY,YAAM;QAC3BD,MAAA,CAAKhB,yBAAA,EAA0B;QAC/BgB,MAAA,CAAKD,eAAA,EAAgB;MACxB,GAAE,GAAI;IACV;IAED5D,WAAA,WAAAA,YAAA,EAAc;MACV,IAAG,KAAKV,KAAA,EAAO;QACXyE,aAAA,CAAc,KAAKzE,KAAK;QACxB,KAAKA,KAAA,GAAQ;MACjB;IACH;IACKsE,eAAA,WAAAA,gBAAA,EAAkB;MAAA,IAAAI,MAAA;MAAA,OAAA3C,kBAAA,eAAAC,oBAAA,GAAAC,IAAA,UAAA0C,SAAA;QAAA,IAAAC,QAAA,EAAAC,SAAA,EAAA5E,aAAA,EAAAd,QAAA,EAAA2F,SAAA;QAAA,OAAA9C,oBAAA,GAAAI,IAAA,UAAA2C,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAzC,IAAA,GAAAyC,SAAA,CAAAxC,IAAA;YAAA;cAAAwC,SAAA,CAAAzC,IAAA;cAEVqC,QAAA,GAAWF,MAAA,CAAK1F,UAAA,CAAW0F,MAAA,CAAKzF,aAAa,EAAEkE,EAAA;cAAA6B,SAAA,CAAAxC,IAAA;cAAA,OAG7BC,aAAA,CAAGC,KAAA,CAACC,OAAA,CAAQ;gBAChCC,GAAA,KAAAjB,MAAA,CAAQ9C,QAAQ;gBAChBgE,MAAA,EAAQ;cAAA,CACX;YAAA;cAHKgC,SAAA,GAAAG,SAAA,CAAAlC,IAAA;cAAA,KAKH+B,SAAA,CAAU9F,IAAA,CAAKgE,OAAA;gBAAAiC,SAAA,CAAAxC,IAAA;gBAAA;cAAA;cACRvC,aAAA,GAAgB4E,SAAA,CAAU9F,IAAA,CAAKiE,OAAA,CAAQC,GAAA,CAAI,UAAAC,MAAA;gBAAA,OAAUA,MAAA,CAAO9D,KAAK;cAAA;cACjED,QAAA,GAAWc,aAAA,CAAcgF,QAAA,CAASL,QAAQ;cAChDF,MAAA,CAAKxF,YAAA,CAAaC,QAAA,GAAWA,QAAA;cAAA,KAG1BA,QAAA;gBAAA6F,SAAA,CAAAxC,IAAA;gBAAA;cAAA;cAAAwC,SAAA,CAAAxC,IAAA;cAAA,OAEyBC,aAAA,CAAGC,KAAA,CAACC,OAAA,CAAQ;gBAChCC,GAAA,KAAAjB,MAAA,CAAQ9C,QAAQ,kBAAA8C,MAAA,CAAeiD,QAAQ;gBACvC/B,MAAA,EAAQ;cAAA,CACX;YAAA;cAHKiC,SAAA,GAAAE,SAAA,CAAAlC,IAAA;cAKN,IAAGgC,SAAA,CAAU/F,IAAA,CAAKgE,OAAA,EAAS;gBACvB2B,MAAA,CAAKxF,YAAA,GAAAgG,cAAA,CAAAA,cAAA,KACEJ,SAAA,CAAU/F,IAAA,CAAKA,IAAA;kBAClBI,QAAA,EAAAA;gBAAA,EACJ;cACJ;cAAA6F,SAAA,CAAAxC,IAAA;cAAA;YAAA;cAGAkC,MAAA,CAAKxF,YAAA,GAAe;gBAChBC,QAAA,EAAU;gBACVC,KAAA,EAAOwF,QAAA;gBACPvF,UAAA,EAAYqF,MAAA,CAAK1F,UAAA,CAAW0F,MAAA,CAAKzF,aAAa,EAAEoE,IAAA;gBAChD/D,OAAA,EAAS;gBACTC,SAAA,EAAW;gBACXC,SAAA,EAAW;gBACXC,SAAA,EAAW;gBACXC,QAAA,EAAU;gBACVC,QAAA,EAAU;gBACVC,QAAA,EAAU;gBACVC,MAAA,EAAQ;gBACRC,QAAA,EAAU;gBACVC,WAAA,EAAa;cACjB;YAAA;cAAAiF,SAAA,CAAAxC,IAAA;cAAA;YAAA;cAAAwC,SAAA,CAAAzC,IAAA;cAAAyC,SAAA,CAAArB,EAAA,GAAAqB,SAAA;cAIRvC,aAAA,CAAAC,KAAA,CAAckB,KAAA,uDAAAoB,SAAA,CAAArB,EAAA,CAAc;cAC5BlB,aAAA,CAAAC,KAAA,CAAIc,SAAA,CAAU;gBACVC,KAAA,EAAO;gBACPC,IAAA,EAAM;cAAA,CACT;YAAA;YAAA;cAAA,OAAAsB,SAAA,CAAAnB,IAAA;UAAA;QAAA,GAAAc,QAAA;MAAA;IAER;IACKQ,WAAA,WAAAA,YAAYC,MAAA,EAAQ;MAAA,IAAAC,MAAA;MAAA,OAAAtD,kBAAA,eAAAC,oBAAA,GAAAC,IAAA,UAAAqD,SAAA;QAAA,IAAAV,QAAA,EAAAzC,GAAA;QAAA,OAAAH,oBAAA,GAAAI,IAAA,UAAAmD,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAjD,IAAA,GAAAiD,SAAA,CAAAhD,IAAA;YAAA;cAChBoC,QAAA,GAAWS,MAAA,CAAKrG,UAAA,CAAWqG,MAAA,CAAKpG,aAAa,EAAEkE,EAAA;cAAA,IAEhDkC,MAAA,CAAKnG,YAAA,CAAaC,QAAA;gBAAAqG,SAAA,CAAAhD,IAAA;gBAAA;cAAA;cACnBC,aAAA,CAAAC,KAAA,CAAIc,SAAA,CAAU;gBACVC,KAAA,EAAO;gBACPC,IAAA,EAAM;cAAA,CACT;cAAA,OAAA8B,SAAA,CAAAC,MAAA;YAAA;cAAAD,SAAA,CAAAjD,IAAA;cAMD8C,MAAA,CAAK3E,WAAA,EAAY;cAAA8E,SAAA,CAAAhD,IAAA;cAAA,OAGCC,aAAA,CAAGC,KAAA,CAACC,OAAA,CAAQ;gBAC1BC,GAAA,KAAAjB,MAAA,CAAQ9C,QAAQ;gBAChBgE,MAAA,EAAQ;gBACR9D,IAAA,EAAM;kBACFK,KAAA,EAAOwF,QAAA;kBACPc,OAAA,EAASN,MAAA,GAAS,OAAO;gBAC5B;gBACDO,MAAA,EAAQ;kBACJ,gBAAgB;gBACpB;cAAA,CACH;YAAA;cAVKxD,GAAA,GAAAqD,SAAA,CAAA1C,IAAA;cAYN,IAAGX,GAAA,CAAIpD,IAAA,CAAK6G,IAAA,KAAS,GAAG;gBAEpBP,MAAA,CAAKnG,YAAA,CAAaa,WAAA,GAAcqF,MAAA,GAAS,OAAO;gBAEhD3C,aAAA,CAAAC,KAAA,CAAIc,SAAA,CAAU;kBACVC,KAAA,EAAO;kBACPC,IAAA,EAAM;gBAAA,CACT;gBAGDmC,UAAA,CAAW,YAAM;kBACbR,MAAA,CAAK7E,YAAA,EAAa;gBACrB,GAAE,GAAI;cAAA,OACJ;gBAEH6E,MAAA,CAAK7E,YAAA,EAAa;gBAClBiC,aAAA,CAAAC,KAAA,CAAIc,SAAA,CAAU;kBACVC,KAAA,EAAOtB,GAAA,CAAIpD,IAAA,CAAK+G,OAAA,IAAW;kBAC3BpC,IAAA,EAAM;gBAAA,CACT;cACL;cAAA8B,SAAA,CAAAhD,IAAA;cAAA;YAAA;cAAAgD,SAAA,CAAAjD,IAAA;cAAAiD,SAAA,CAAA7B,EAAA,GAAA6B,SAAA;cAGAH,MAAA,CAAK7E,YAAA,EAAa;cAClBiC,aAAA,CAAAC,KAAA,CAAIc,SAAA,CAAU;gBACVC,KAAA,EAAO;gBACPC,IAAA,EAAM;cAAA,CACT;YAAA;YAAA;cAAA,OAAA8B,SAAA,CAAA3B,IAAA;UAAA;QAAA,GAAAyB,QAAA;MAAA;IAER;IAAA;IAEDS,cAAA,WAAAA,eAAA,EAAiB;MACb,KAAK7F,UAAA,GAAa;IACrB;IAED8F,UAAA,WAAAA,WAAA,EAAa;MACT,KAAK9F,UAAA,GAAa;IACrB;IAEK+F,YAAA,WAAAA,aAAavD,KAAA,EAAO;MAAA,IAAAwD,MAAA;MAAA,OAAAnE,kBAAA,eAAAC,oBAAA,GAAAC,IAAA,UAAAkE,SAAA;QAAA,OAAAnE,oBAAA,GAAAI,IAAA,UAAAgE,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAA9D,IAAA,GAAA8D,SAAA,CAAA7D,IAAA;YAAA;cACtB0D,MAAA,CAAKjH,aAAA,GAAgByD,KAAA;cACrBwD,MAAA,CAAKF,UAAA,EAAW;cAAAK,SAAA,CAAA7D,IAAA;cAAA,OACV0D,MAAA,CAAK5B,eAAA,EAAgB;YAAA;YAAA;cAAA,OAAA+B,SAAA,CAAAxC,IAAA;UAAA;QAAA,GAAAsC,QAAA;MAAA;IAC9B;IAAA;IAGK5C,yBAAA,WAAAA,0BAAA,EAA4B;MAAA,IAAA+C,MAAA;MAAA,OAAAvE,kBAAA,eAAAC,oBAAA,GAAAC,IAAA,UAAAsE,SAAA;QAAA,IAAA1B,SAAA,EAAA5E,aAAA;QAAA,OAAA+B,oBAAA,GAAAI,IAAA,UAAAoE,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAlE,IAAA,GAAAkE,SAAA,CAAAjE,IAAA;YAAA;cAAA,MAC3B8D,MAAA,CAAKtH,UAAA,CAAWuB,MAAA,KAAW;gBAAAkG,SAAA,CAAAjE,IAAA;gBAAA;cAAA;cAAA,OAAAiE,SAAA,CAAAhB,MAAA;YAAA;cAAAgB,SAAA,CAAAlE,IAAA;cAAAkE,SAAA,CAAAjE,IAAA;cAAA,OAGFC,aAAA,CAAGC,KAAA,CAACC,OAAA,CAAQ;gBAChCC,GAAA,KAAAjB,MAAA,CAAQ9C,QAAQ;gBAChBgE,MAAA,EAAQ;cAAA,CACX;YAAA;cAHKgC,SAAA,GAAA4B,SAAA,CAAA3D,IAAA;cAKN,IAAG+B,SAAA,CAAU9F,IAAA,CAAKgE,OAAA,EAAS;gBACjB9C,aAAA,GAAgB4E,SAAA,CAAU9F,IAAA,CAAKiE,OAAA,CAAQC,GAAA,CAAI,UAAAC,MAAA;kBAAA,OAAUA,MAAA,CAAO9D,KAAK;gBAAA;gBAEvEkH,MAAA,CAAKtH,UAAA,GAAasH,MAAA,CAAKtH,UAAA,CAAWiE,GAAA,CAAI,UAAAC,MAAA;kBAAA,OAAAgC,cAAA,CAAAA,cAAA,KAC/BhC,MAAA;oBACH/D,QAAA,EAAUc,aAAA,CAAcgF,QAAA,CAAS/B,MAAA,CAAOC,EAAE;kBAAA;gBAAA,CAC5C;cACN;cAAAsD,SAAA,CAAAjE,IAAA;cAAA;YAAA;cAAAiE,SAAA,CAAAlE,IAAA;cAAAkE,SAAA,CAAA9C,EAAA,GAAA8C,SAAA;cAEAhE,aAAA,CAAAC,KAAA,CAAckB,KAAA,uDAAA6C,SAAA,CAAA9C,EAAA,CAAc;YAAA;YAAA;cAAA,OAAA8C,SAAA,CAAA5C,IAAA;UAAA;QAAA,GAAA0C,QAAA;MAAA;IAEpC;EACJ;AACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7XAG,EAAA,CAAGC,UAAA,CAAWC,eAAe","ignoreList":[]}